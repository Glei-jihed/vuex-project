{"ast":null,"code":"import { createStore } from 'vuex';\nimport { SET_NOTE } from '@/store/mutation-types';\n\n// Create a new store instance.\nconst store = createStore({\n  state: {\n    currentMovie: {},\n    movies: [{\n      id: 1,\n      title: \"Arrietty : Le Petit Monde des Chapardeurs\",\n      image: require('@/assets/movies/arrietty.jpg'),\n      note: 3\n    }, {\n      id: 2,\n      title: \"Le Château Ambulant\",\n      image: require('@/assets/movies/chateau_ambulant.jpg'),\n      note: 5\n    }, {\n      id: 3,\n      title: \"Le Voyage de Chihiro\",\n      image: require('@/assets/movies/chihiro.jpg'),\n      note: 5\n    }, {\n      id: 4,\n      title: \"Kiki la Petite Sorcière\",\n      image: require('@/assets/movies/kiki.jpg'),\n      note: 4\n    }, {\n      id: 5,\n      title: \"Le Vent se lève\",\n      image: require('@/assets/movies/le_vent_se_leve.jpg'),\n      note: 5\n    }, {\n      id: 6,\n      title: \"Porco Rosso\",\n      image: require('@/assets/movies/porco_rosso.jpg'),\n      note: 4\n    }, {\n      id: 7,\n      title: \"Princesse Mononoké\",\n      image: require('@/assets/movies/princesse_mononoke.jpg'),\n      note: 5\n    }, {\n      id: 8,\n      title: \"Mon voisin Totoro\",\n      image: require('@/assets/movies/totoro.jpg'),\n      note: 4\n    }]\n  },\n  getters: {\n    getMovies(state) {\n      return state.movies;\n    },\n    getCurrentMovie(state) {\n      return state.currentMovie;\n    }\n  },\n  mutations: {\n    setCurrentMovie(state, movie) {\n      state.currentMovie = movie;\n    },\n    setCurrentMovieVersionMutation(state, movieId) {\n      let movieFound = {};\n      state.movies.forEach(movie => {\n        if (movieId == movie.id) {\n          movieFound = movie;\n        }\n      });\n      state.currentMovie = movieFound;\n    },\n    [SET_NOTE](state, note) {\n      state.currentMovie.note = note;\n    }\n  },\n  actions: {\n    setCurrentMovie({\n      commit,\n      state\n    }, movieId) {\n      let movieFound = {};\n      state.movies.forEach(movie => {\n        if (movieId == movie.id) {\n          movieFound = movie;\n        }\n      });\n      commit('setCurrentMovie', movieFound);\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","SET_NOTE","store","state","currentMovie","movies","id","title","image","require","note","getters","getMovies","getCurrentMovie","mutations","setCurrentMovie","movie","setCurrentMovieVersionMutation","movieId","movieFound","forEach","actions","commit"],"sources":["C:/Users/Mihawk/Desktop/portfelio/vuejs-project/cinema/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nimport { SET_NOTE } from '@/store/mutation-types';\n\n// Create a new store instance.\nconst store = createStore({\n  state: {\n    currentMovie: {},\n    movies: [{\n      id: 1,\n      title: \"Arrietty : Le Petit Monde des Chapardeurs\",\n      image: require('@/assets/movies/arrietty.jpg'),\n      note: 3,\n    },\n    {\n      id: 2,\n      title: \"Le Château Ambulant\",\n      image: require('@/assets/movies/chateau_ambulant.jpg'),\n      note: 5,\n    },\n    {\n      id: 3,\n      title: \"Le Voyage de Chihiro\",\n      image: require('@/assets/movies/chihiro.jpg'),\n      note: 5,\n    },\n    {\n      id: 4,\n      title: \"Kiki la Petite Sorcière\",\n      image: require('@/assets/movies/kiki.jpg'),\n      note: 4,\n    },{\n      id: 5,\n      title: \"Le Vent se lève\",\n      image: require('@/assets/movies/le_vent_se_leve.jpg'),\n      note: 5,\n    },\n    {\n      id: 6,\n      title: \"Porco Rosso\",\n      image: require('@/assets/movies/porco_rosso.jpg'),\n      note: 4,\n    },\n    {\n      id: 7,\n      title: \"Princesse Mononoké\",\n      image: require('@/assets/movies/princesse_mononoke.jpg'),\n      note: 5,\n    },\n    {\n      id: 8,\n      title: \"Mon voisin Totoro\",\n      image: require('@/assets/movies/totoro.jpg'),\n      note: 4,\n    }]\n  },\n  getters: {\n    getMovies(state) {\n      return state.movies;\n    },\n    getCurrentMovie(state) {\n      return state.currentMovie;\n    }\n  },\n  mutations: {\n    setCurrentMovie (state, movie) {\n      state.currentMovie = movie;\n    },\n    setCurrentMovieVersionMutation (state, movieId) {\n      let movieFound = {};\n      state.movies.forEach((movie) => {\n        if (movieId == movie.id) {\n          movieFound = movie;\n        }\n      });\n      state.currentMovie = movieFound;\n    },\n    [SET_NOTE] (state, note) {\n      state.currentMovie.note = note;\n    }\n  },\n  actions: {\n    setCurrentMovie ({commit, state}, movieId) {\n      let movieFound = {};\n      state.movies.forEach((movie) => {\n        if (movieId == movie.id) {\n          movieFound = movie;\n        }\n      })\n      commit('setCurrentMovie', movieFound);\n    }\n  }\n})\n\nexport default store;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}